/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 350326790
 */
public class Jfram extends javax.swing.JFrame {
    private String text;
    private String explanation;
    private boolean isTrue;
    private redFlagQuiz quiz = new redFlagQuiz();
    private int debounce = 0;
    
    /**
     * Creates new form Jfram
     */
    public Jfram() {
        initComponents();
    }
    
    
    /** LOOOK OVER HERE
     * quiz - real or fake news and gives feedbac
     * lessons slide to teach how to common techniques used in stuff in stuff maybe 
     * quiz on common techniques / red flag 
     * 
     * /
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        mani = new javax.swing.JRadioButton();
        media = new javax.swing.JRadioButton();
        info = new javax.swing.JRadioButton();
        javax.swing.JButton NextButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lessonArea = new javax.swing.JTextPane();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        tfTrue = new javax.swing.JButton();
        tfFalse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfFeed = new javax.swing.JTextArea();
        tfNext = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tfquestion = new javax.swing.JTextArea();
        score = new javax.swing.JLabel();
        streak = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Fake Or Faker?");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("News or Nonsense?");

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jToggleButton1.setText("Real");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jToggleButton2.setText("Next");
        jToggleButton2.setToolTipText("");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("Click Next");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Click Real or Fake");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Red Flags of Fake News");

        buttonGroup1.add(mani);
        mani.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mani.setText("Manipulation");
        mani.setToolTipText("");
        mani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maniActionPerformed(evt);
            }
        });

        buttonGroup1.add(media);
        media.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        media.setText("Media");

        buttonGroup1.add(info);
        info.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        info.setText("False Information");

        NextButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NextButton.setText("Next");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        lessonArea.setText("Choose the topics on the right");
        jScrollPane3.setViewportView(lessonArea);

        jToggleButton3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jToggleButton3.setText("Fake");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Red Flag Quiz");

        tfTrue.setText("True");
        tfTrue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTrueActionPerformed(evt);
            }
        });

        tfFalse.setText("False");
        tfFalse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFalseActionPerformed(evt);
            }
        });

        tfFeed.setColumns(20);
        tfFeed.setLineWrap(true);
        tfFeed.setRows(5);
        tfFeed.setWrapStyleWord(true);
        jScrollPane1.setViewportView(tfFeed);

        tfNext.setText("Next");
        tfNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNextActionPerformed(evt);
            }
        });

        tfquestion.setColumns(20);
        tfquestion.setLineWrap(true);
        tfquestion.setRows(5);
        tfquestion.setWrapStyleWord(true);
        jScrollPane4.setViewportView(tfquestion);

        score.setText("Score:");

        streak.setText("Highest Streak:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mani)
                                    .addComponent(media)
                                    .addComponent(info)))
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(NextButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(jToggleButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jToggleButton2))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(219, 219, 219))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane1)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(tfTrue)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfFalse)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfNext))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(score, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(streak, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(290, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton2)
                            .addComponent(jToggleButton1)
                            .addComponent(jToggleButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(score))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(streak)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tfTrue)
                                    .addComponent(tfFalse)
                                    .addComponent(tfNext))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mani)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(media)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NextButton)
                .addContainerGap(389, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        checkQuestion(true);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        nextQuestion();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void maniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maniActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        // Declare a variable 'lesson' to hold the selected lesson object
        Lesson lesson;

        // Check if a particular option (e.g., 'info') is selected
        if (info.isSelected()) {
            // If 'info' is selected, create an instance of FalseInfo (a subclass of Lesson)
            lesson = new FalseInfo();
        }
        // Check if 'mani' (likely referring to Manipulation) is selected
        else if (mani.isSelected()) {
            // If 'mani' is selected, create an instance of Manipulation (another subclass of Lesson)
            lesson = new Manipulation();
        }
        // If neither 'info' nor 'mani' is selected, default to Media
        else {
            // Create an instance of Media (another subclass of Lesson)
            lesson = new Media();
        }

        // Set the text area (lessonArea) to display a random record from the selected lesson
        lessonArea.setText(lesson.getRandomRecord());

    }//GEN-LAST:event_NextButtonActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        checkQuestion(false); // This will print "Incorrect. Try again!"
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void tfNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNextActionPerformed
        // TODO add your handling code here:
        tfFeed.setText("");                // Clears the feedback field (sets it to an empty string)
        debounce = 0;                      // Resets a variable (likely for debouncing or delay management)
        quiz.getCurrQuestion().setStuff(); // Sets up the current question by calling setStuff() on the current question object
        tfquestion.setText(quiz.getCurrQuestion().question); // Updates the UI with the new question text
    }//GEN-LAST:event_tfNextActionPerformed

    private void tfTrueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTrueActionPerformed
        // TODO add your handling code here:
        String tfWrite;
        // Check if debounce is 0 (to prevent multiple submissions in quick succession)
        if (debounce == 0) {

            // Check if the user's answer is correct by comparing it with "True"
            if (quiz.getCurrQuestion().correct("True")) {

                // If the answer is correct
                tfFeed.setText("Correct");   // Display "Correct" in the feedback field
                quiz.addscore();             // Increment the score by 1
                quiz.addstreak();            // Increment the streak (i.e., consecutive correct answers)

                // Update the score and streak on the UI
                score.setText("Score: " + Integer.toString(quiz.getscore()));
                streak.setText("Highest Streak: " + Integer.toString(quiz.getstreak()));
                tfWrite = "Correct";

            } else {
                // If the answer is incorrect
                tfFeed.setText(quiz.getCurrQuestion().feedback);  // Display the feedback from the current question
                quiz.resetscore();  // Reset the score (i.e., the score goes back to 0)

                // Update the score on the UI (which is now 0 after reset)
                score.setText("Score: " + Integer.toString(quiz.getscore()));
                tfWrite = "Wrong";
            }

            // Set debounce to 1 to prevent multiple actions being triggered in quick succession
            debounce = 1;
            quiz.write("redflagquizdata.txt", tfWrite);
        }
    }//GEN-LAST:event_tfTrueActionPerformed

    private void tfFalseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFalseActionPerformed
        // TODO add your handling code here:
        String tfWrite;
        // Check if debounce is 0 (to ensure this block runs only once per action)
        if (debounce == 0) {

            // Check if the answer provided by the user is correct (answer is "False" in this case)
            if (quiz.getCurrQuestion().correct("False")) {

                // If the answer is correct
                tfFeed.setText("Correct");   // Display "Correct" in the feedback field
                quiz.addscore();             // Increment the score by 1
                quiz.addstreak();            // Increment the streak (consecutive correct answers)
                tfWrite = "Correct";

                // Update the score and streak on the UI
                score.setText("Score: " + Integer.toString(quiz.getscore()));
                streak.setText("Highest Streak: " + Integer.toString(quiz.getstreak()));

            } else {
                // If the answer is incorrect
                tfFeed.setText(quiz.getCurrQuestion().feedback);  // Display the feedback related to the question
                quiz.resetscore();  // Reset the score to 0 after a wrong answer

                // Update the score on the UI (which is now 0 after reset)
                score.setText("Score: " + Integer.toString(quiz.getscore()));
                tfWrite = "Wrong";
            }
            
            quiz.write("redflagquizdata.txt", tfWrite);
            // Set debounce to 1 to prevent multiple actions from being triggered in quick succession
            debounce = 1;
        }

    }//GEN-LAST:event_tfFalseActionPerformed


    public void nextQuestion() {
        Headline headline = new Headline();  // Create a new Headline object

        // Get the data for the new question
        text = headline.getText();  // The question text
        isTrue = headline.getIsTrue();  // The true/false answer
        explanation = headline.getExplanation();  // The explanation for the answer

        // Set the question text in the JTextField and clear previous feedback
        jTextField1.setText(text);  
        jTextArea2.setText("");  // Clear the feedback area
    }

    public void checkQuestion(boolean res) {
        jTextArea2.setLineWrap(true);  // Enable text wrapping for feedback area
        jTextArea2.setWrapStyleWord(true);  // Make sure text wraps at word boundaries

        // Check if the user's answer is correct
        if (res == isTrue) {
            jTextArea2.setText("Correct! " + explanation);  // Show "Correct!" with explanation
        } else {
            jTextArea2.setText(explanation);  // Show explanation even if the answer is incorrect
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jfram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jfram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jfram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jfram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jfram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JTextPane lessonArea;
    private javax.swing.JRadioButton mani;
    private javax.swing.JRadioButton media;
    private javax.swing.JLabel score;
    private javax.swing.JLabel streak;
    private javax.swing.JButton tfFalse;
    private javax.swing.JTextArea tfFeed;
    private javax.swing.JButton tfNext;
    private javax.swing.JButton tfTrue;
    private javax.swing.JTextArea tfquestion;
    // End of variables declaration//GEN-END:variables
}
